plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "1.2.1"
}
repositories {
    maven { url "https://maven.terraformersmc.com/releases/" }
}
architectury {
    platformSetupLoomIde()
    fabric()
}

minecraft {
    accessWidener = file("src/main/resources/otyacraftengine.accesswidener")
}

configurations {
    common
    shadowCommon
    shadowIn
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
    implementation.extendsFrom shadowIn
    shadowCommon.extendsFrom shadowIn
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"

    modApi "dev.architectury:architectury-fabric:${rootProject.architectury_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }

    modApi "com.terraformersmc:modmenu:${rootProject.modmenu_version}"
    modApi "me.shedaniel.cloth:cloth-config-fabric:${rootProject.cloth_config_version}"
    modApi "net.morimori0317:bettertaskbar-fabric:1.0"

    shadowIn "dev.felnull:felnull-java-library:${rootProject.felnull_version}"
    shadowIn "dev.felnull:felnull-java-library-natives:${rootProject.felnull_version}"
    shadowIn 'com.madgag:animated-gif-lib:1.4'
    shadowIn 'de.javagl:obj:0.3.0'
}
processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowIn]
    relocate('dev.felnull.fnjl', 'dev.felnull.otyacraftengine.libs.dev.felnull.fnjl') {
        exclude 'dev.felnull.fnjln.**'
    }
    relocate 'com.madgag', 'dev.felnull.otyacraftengine.libs.com.madgag'
    relocate 'de.javagl', 'dev.felnull.otyacraftengine.libs.de.javagl'
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveBaseName = "${rootProject.archives_base_name}-${project.name}-${rootProject.minecraft_version}"
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            artifact(remapJar)
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
            pom {
                name = 'OtyacraftEngine'
                description = 'My mod integration library.'
                licenses {
                    license {
                        name = 'GNU Lesser General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/lgpl-3.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'MORIMORI0317'
                        name = 'MORIMORI0317'
                    }
                    developer {
                        id = 'FelNull'
                        name = 'TeamFelNull'
                        email = 'teamfelnull@m.servg.red'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url "https://maven.felnull.dev/"
            credentials {
                username = "felnull"
                password = "${project.maven_put_pass}" != '' ? "${project.maven_put_pass}" : System.getenv('mavenpassword')
            }
        }
    }

    if (System.getenv('curesforgeapikey') != null && "${project.curesforge_id}" != '') {
        curseforge {
            apiKey = System.getenv('curesforgeapikey')
            project {
                id = "${rootProject.curesforge_id}"
                changelog = ""
                releaseType = "${rootProject.release_type}"
                addGameVersion "${rootProject.minecraft_version}"
                addGameVersion 'Java 16'

                mainArtifact(file("${project.buildDir}/libs/${rootProject.archives_base_name}-${project.name}-${rootProject.minecraft_version}-${project.mod_version}.jar")) {
                    displayName = "${rootProject.mod_display_name}-${rootProject.minecraft_version}-${project.mod_version}-Fabric"

                    requiredDependency 'fabric-api'
                    requiredDependency 'cloth-config'
                    requiredDependency 'architectury-fabric'
                }

                addArtifact(file("${project.buildDir}/libs/${rootProject.archives_base_name}-${project.mod_version}-dev.jar")) {
                    displayName = "${rootProject.mod_display_name}-${rootProject.minecraft_version}-${project.mod_version}-Fabric-dev"
                }
                addArtifact(file("${project.buildDir}/libs/${rootProject.archives_base_name}-${project.mod_version}-source.jar")) {
                    displayName = "${rootProject.mod_display_name}-${rootProject.minecraft_version}-${project.mod_version}-Fabric-source"
                }
                afterEvaluate {
                    uploadTask.dependsOn("build")
                }
            }
            options {
                forgeGradleIntegration = false
            }
        }
    }

    if (System.getenv('modrinthapikey') != null && "${modrinth_id}" != '') {
        task publishModrinth(type: com.modrinth.minotaur.TaskModrinthUpload) {
            token = System.getenv('modrinthapikey')
            projectId = "${rootProject.modrinth_id}"
            versionName = "${rootProject.mod_display_name}-${rootProject.minecraft_version}-${project.mod_version}-Fabric"
            versionNumber = "${rootProject.minecraft_version}-${project.mod_version}-Fabric"
            uploadFile = file("${project.buildDir}/libs/${rootProject.archives_base_name}-${project.name}-${rootProject.minecraft_version}-${project.mod_version}.jar")
            versionType = "${project.release_type}".toUpperCase()
            addGameVersion("${rootProject.minecraft_version}")
            addLoader("fabric")
            addGameVersion "${rootProject.minecraft_version}"
        }
    }
}
